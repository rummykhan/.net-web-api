
<h2>Students</h2>
<div id="app">
    <div class="row">
        <div class="col-lg-6">
            <button class="btn btn-primary" v-on:click="newStudentForm"><i class="glyphicon glyphicon-plus"></i> Create</button>
            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">
                    <div class="form-group">
                        <label>Name</label>
                        <input type="text" name="name" v-model="newStudent.Name" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>Age</label>
                        <input type="text" name="age" v-model="newStudent.Age" class="form-control" />
                    </div>

                    <div class="form-group">
                        <label>School</label>
                        <input type="text" name="school" v-model="newStudent.School" class="form-control" />
                    </div>

                    <div class="form-group">
                        <button class="btn btn-primary" v-on:click="saveData">Submit</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Age</th>
                        <th>School</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <template v-for="student in students">
                        <tr>
                            <td>
                                {{ student.Id }}
                            </td>
                            <td>
                                {{ student.Name }}
                            </td>
                            <td>
                                {{ student.Age }}
                            </td>
                            <td>
                                {{ student.School }}
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button class="btn btn-default btn-sm" v-on:click="editStudent(student)"><i class="glyphicon glyphicon-pencil"></i> Edit</button>
                                    <button class="btn btn-danger btn-sm" v-on:click="deleteStudent(student)"><i class="glyphicon glyphicon-trash"></i> Delete</button>
                                </div>
                            </td>
                        </tr>
                    </template>
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/vue")
    <script type="text/javascript">
        Vue.use(VueResource);
        var app = new Vue({
            el: '#app',
            data: {
                message: 'Hello world',
                students: [],
                newStudent: {
                    Name: null,
                    Age: null,
                    School: null,
                },
                updateStudentId: null,
            },
            mounted: function () {
                this.getStudents();
            },
            methods: {
                getStudents: function () {
                    this.$http.get('/api/students')
                        .then(function (res) {
                            this.displayStudents(res.body);
                        })
                        .catch(function (err) {
                            console.log('err', err);
                        });
                },
                displayStudents: function (students) {
                    Object.assign(this, { students: students });
                },
                editStudent: function (student) {

                    var studentToUpdate = {
                        Name: student.Name,
                        Age: student.Age,
                        School: student.School
                    };

                    Object.assign(this, { newStudent: studentToUpdate, updateStudentId: student.Id });
                },
                deleteStudent: function (student) {
                    console.log('delete:', student);
                },
                saveData: function () {
                    var student = this.newStudent;

                    if (!!this.updateStudentId) {
                        this.updateStudent(this.updateStudentId, student);
                        return true;
                    }

                    this.$http.post('/api/students', student)
                        .then(function (res) {
                            this.getStudents();
                            this.newStudentForm();
                        })
                        .catch(function (err) {
                            console.log('err', err);
                        });
                },
                updateStudent: function (id, student) {
                    student.id = id;
                    this.$http.put('/api/students/' + id, student)
                        .then(function (res) {
                            this.getStudents();
                            this.newStudentForm();
                        })
                        .catch(function (err) {
                            console.log('err', err);
                        });
                },
                newStudentForm: function () {

                    var student = {
                        Name: null,
                        Age: null,
                        School: null
                    };

                    Object.assign(this, { updateStudentId: null, newStudent: student });
                }
            }
        })
    </script>

}